//int15 -> shutdown(21) sys call
alias userSP R0;
userSP = SP;

//switch to kernel stack
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]*512 - 1;

//mod flag = 21
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 21;

if( ([SYSTEM_STATUS_TABLE + 1] != 1) || ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 3] != 1) ) then
	//return -1: current user is not root.
	[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = -1;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	ireturn;
endif;

//commit changes in the memory copies of the
//inode table(with user table), root file, disk free list

//commit inode table + user table mem copy to disk
multipush(R0, R1, R2, R3, R4, R5);
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];//PID
R3 = 59;//page number
R4 = 3;//block number
call MOD_4;
multipop(R0, R1, R2, R3, R4, R5);
multipush(R0, R1, R2, R3, R4, R5);
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];//PID
R3 = 60;//page number
R4 = 4;//block number
call MOD_4;
multipop(R0, R1, R2, R3, R4, R5);

//root file commit
multipush(R0, R1, R2, R3, R4, R5);
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];//PID
R3 = 62;//page number
R4 = 5;//block number
call MOD_4;
multipop(R0, R1, R2, R3, R4, R5);

//disk free list
multipush(R0, R1, R2, R3, R4, R5);
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];//PID
R3 = 61;//page number
R4 = 2;//block number
call MOD_4;
multipop(R0, R1, R2, R3, R4, R5);

print "shutdown";
halt;
